name: Publish .NET 8 Desktop App

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win
            arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: x64
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Cache .NET dependencies
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Publish
      run: dotnet publish ./CalculatorAvalonia/CalculatorAvalonia.csproj --configuration Release --runtime ${{ matrix.platform }}-${{ matrix.arch }} --self-contained true --output ./publish

    - name: Create Portable Build
      run: |
        mkdir -p ./portable
        cp -r ./publish/* ./portable/

    - name: Zip artifact (Windows)
      if: matrix.os == 'windows-latest'
      run: Compress-Archive -Path ./portable/* -DestinationPath ./CalculatorAvalonia-${{ matrix.platform }}-${{ matrix.arch }}-portable.zip
      shell: pwsh

    - name: Zip artifact (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: zip -r ./CalculatorAvalonia-${{ matrix.platform }}-${{ matrix.arch }}-portable.zip ./portable
      shell: bash

    - name: Create NSIS Installer (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install nsis
        makensis -V4 -NOCD -DOUTPUT=CalculatorAvalonia-${{ matrix.platform }}-${{ matrix.arch }}-installer.exe -DSOURCEDIR=./publish ./CalculatorAvalonia/installer.nsi
      shell: cmd

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.platform }}-${{ matrix.arch }}
        path: |
          ./CalculatorAvalonia-${{ matrix.platform }}-${{ matrix.arch }}-portable.zip
          ./CalculatorAvalonia-${{ matrix.platform }}-${{ matrix.arch }}-installer.exe

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download artifacts
      uses: actions/download-artifact@v3

    - name: Validate artifacts
      run: |
        for file in ./*/*.zip; do
          if ! unzip -t "$file" > /dev/null; then
            echo "Error: $file is not a valid zip file"
            exit 1
          fi
        done

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        assets=""
        for file in ./*/*.zip ./*/*.exe; do
          assets="$assets $file"
        done
        gh release create ${{ github.ref_name }} \
          --title "Release ${{ github.ref_name }}" \
          --generate-notes \
          $assets
